/** Version Control. */
create table VersionCtrl (
id bigint generated by default as identity,
description varchar(255),
version timestamp,
primary key (id)
);

/** System ctrl. */
create table SystemCtrl (
id integer not null,
versionCtrl_id bigint,
primary key (id)
);

/** POSITION TYPE */
create table PositionType (
id bigint generated by default as identity,
active boolean not null,
businessKey varchar(255) not null,
custom boolean not null,
description varchar(255),
version timestamp,
typeLevel integer not null,
primary key (id)
);

/** POSITION */
create table Position (
id bigint generated by default as identity,
active boolean not null,
businessKey varchar(255) not null,
custom boolean not null,
description varchar(255),
version timestamp,
type_id bigint,
primary key (id)
);
/** Position versioned data. */
create table Position_PositionLinks (
PositionEntity_id bigint not null,
dataVersions_item_id bigint not null,
dataVersions_versionCtrl_id bigint not null,
primary key (PositionEntity_id, dataVersions_item_id, dataVersions_versionCtrl_id)
);
create table PositionLinks (
description varchar(255),
version timestamp,
item_id bigint not null,
versionCtrl_id bigint not null,
parentItem_id bigint,
orgUnit_id bigint,
primary key (item_id, versionCtrl_id)
);
/** Position contacts. */
create table PositionLinks_Contact (
PositionLinksEntity_item_id bigint not null,
PositionLinksEntity_versionCtrl_id bigint not null,
contacts_id bigint not null,
primary key (PositionLinksEntity_item_id, PositionLinksEntity_versionCtrl_id, contacts_id)
);
/** Position OrgUnit. */
create table PositionLinks_OrgUnit (
PositionLinksEntity_item_id bigint not null,
PositionLinksEntity_versionCtrl_id bigint not null,
manageOrgUnits_id bigint not null,
primary key (PositionLinksEntity_item_id, PositionLinksEntity_versionCtrl_id, manageOrgUnits_id)
);
/** Position Tree. */
create table PositionLinks_Position (
PositionLinksEntity_item_id bigint not null,
PositionLinksEntity_versionCtrl_id bigint not null,
childrenItems_id bigint not null,
primary key (PositionLinksEntity_item_id, PositionLinksEntity_versionCtrl_id, childrenItems_id)
);

/** UNIT-TYPE */
create table UnitType (
id bigint generated by default as identity,
active boolean not null,
businessKey varchar(255) not null,
custom boolean not null,
description varchar(255),
version timestamp,
primary key (id)
);

/** ORG UNIT */
create table OrgUnit (
id bigint generated by default as identity,
active boolean not null,
businessKey varchar(255) not null,
custom boolean not null,
description varchar(255),
version timestamp,
type_id bigint,
primary key (id)
);

/** Org Unit versioned data. */
create table OrgUnit_OrgUnitLinks (
OrgUnitEntity_id bigint not null,
dataVersions_item_id bigint not null,
dataVersions_versionCtrl_id bigint not null,
primary key (OrgUnitEntity_id, dataVersions_item_id, dataVersions_versionCtrl_id)
);
create table OrgUnitLinks (
description varchar(255),
version timestamp,
item_id bigint not null,
versionCtrl_id bigint not null,
parentItem_id bigint,
managerPosition_id bigint,
primary key (item_id, versionCtrl_id)
);
/** OrgUnit Tree Relationship */
create table OrgUnitLinks_OrgUnit (
OrgUnitLinksEntity_item_id bigint not null,
OrgUnitLinksEntity_versionCtrl_id bigint not null,
childrenItems_id bigint not null,
primary key (OrgUnitLinksEntity_item_id, OrgUnitLinksEntity_versionCtrl_id, childrenItems_id)
);
/** The Positions Mangaged by an ORG UNIT */
create table OrgUnitLinks_Position (
OrgUnitLinksEntity_item_id bigint not null,
OrgUnitLinksEntity_versionCtrl_id bigint not null,
positions_id bigint not null,
primary key (OrgUnitLinksEntity_item_id, OrgUnitLinksEntity_versionCtrl_id, positions_id)
);

/** LOCATIONs */
create table Location (
id bigint generated by default as identity,
active boolean not null,
businessKey varchar(255) not null,
custom boolean not null,
description varchar(255),
version timestamp,
country varchar(255),
line1 varchar(255),
line2 varchar(255),
postcode varchar(255),
state varchar(255),
suburb varchar(255),
workStation varchar(255),
parentId bigint,
primary key (id)
);

/** IMAGE HOLDER */
create table Image (
id bigint generated by default as identity,
active boolean not null,
businessKey varchar(255) not null,
custom boolean not null,
description varchar(255),
version timestamp,
image blob,
mimeType varchar(255),
thumbNail blob,
primary key (id)
);

/** CHANNEL (ie email, mobile etc) */
create table Channel (
id bigint generated by default as identity,
active boolean not null,
businessKey varchar(255) not null,
custom boolean not null,
description varchar(255),
version timestamp,
channelValue varchar(255),
type varchar(255),
primary key (id)
);

/** CONTACT (ie the Person) */
create table Contact (
id bigint generated by default as identity,
active boolean not null,
businessKey varchar(255) not null,
custom boolean not null,
description varchar(255),
version timestamp,
country varchar(255),
line1 varchar(255),
line2 varchar(255),
postcode varchar(255),
state varchar(255),
suburb varchar(255),
workStation varchar(255),
companyTitle varchar(255),
firstName varchar(255),
lastName varchar(255),
image_id bigint,
location_id bigint,
primary key (id)
);

/** Contacts can have multiple channels */
create table Contact_Channel (
ContactEntity_id bigint not null,
channels_id bigint not null,
primary key (ContactEntity_id, channels_id)
);

/** Contacts can manage multiple positions (versioned) */
/** Contact to Contact_Links */
create table Contact_ContactLinks (
ContactEntity_id bigint not null,
dataVersions_item_id bigint not null,
dataVersions_versionCtrl_id bigint not null,
primary key (ContactEntity_id, dataVersions_item_id, dataVersions_versionCtrl_id)
);

/** Contact versioned links **/
create table ContactLinks (
description varchar(255),
version timestamp,
item_id bigint not null,
versionCtrl_id bigint not null,
primary key (item_id, versionCtrl_id)
);
/** ContactLinks to Position*/
create table ContactLinks_Position (
ContactLinksEntity_item_id bigint not null,
ContactLinksEntity_versionCtrl_id bigint not null,
positions_id bigint not null,
primary key (ContactLinksEntity_item_id, ContactLinksEntity_versionCtrl_id, positions_id)
);

/** Foreign Keys. */
alter table Position add constraint FK_Position_to_PositionType foreign key (type_id) references PositionType;
alter table OrgUnit add constraint FK_OrgUnit_to_Type foreign key (type_id) references UnitType;
alter table Location add constraint FK_Location_to_Location foreign key (parentId) references Location;
alter table Contact add constraint FK_Contact_to_Location foreign key (location_id) references Location;
alter table Contact add constraint FK_Contact_to_Image foreign key (image_id) references Image;
alter table Contact_Channel add constraint FK_Contact_Channel_to_Channel foreign key (channels_id) references Channel;
alter table Contact_Channel add constraint FK_Contact_Channel_to_Contact foreign key (ContactEntity_id) references Contact;

/** Business Keys*/
alter table PositionType add constraint UK_PositionType_Business_Key unique (businessKey);
alter table Position add constraint UK_Position_Business_Key unique (businessKey);
alter table OrgUnit add constraint UK_OrgUnit_Business_Key unique (businessKey);
alter table Location add constraint UK_Location_Business_Key unique (businessKey);
alter table Contact add constraint UK_Contact_Business_Key unique (businessKey);
alter table UnitType add constraint UK_UnitType_Business_Key unique (businessKey);
alter table Channel add constraint UK_Channel_Business_Key unique (businessKey);
alter table Image add constraint UK_Image_Business_Key unique (businessKey);
/** Unique channel id*/
alter table Contact_Channel add constraint UK_Contact_Channel unique (channels_id);

/** Versioned Data - Unique Keys */
alter table Contact_ContactLinks add constraint UK_Contact_ContactLinks unique (dataVersions_item_id, dataVersions_versionCtrl_id);
alter table OrgUnit_OrgUnitLinks add constraint UK_OrgUnit_OrgUnitLinks unique (dataVersions_item_id, dataVersions_versionCtrl_id);
alter table Position_PositionLinks add constraint UK_Position_PositionLinks unique (dataVersions_item_id, dataVersions_versionCtrl_id);

/** Versioned Data - Foreign Keys */
alter table Contact_ContactLinks add constraint FK_Contact_ContactLinks_to_ContactLinks foreign key (dataVersions_item_id, dataVersions_versionCtrl_id) references ContactLinks;
alter table Contact_ContactLinks add constraint FK_Contact_ContactLinks_to_Contact foreign key (ContactEntity_id) references Contact;
alter table ContactLinks add constraint FK_ContactLinks_to_Contact foreign key (item_id) references Contact;
alter table ContactLinks add constraint FK_ContactLinks_to_VersionCtrl foreign key (versionCtrl_id) references VersionCtrl;
alter table ContactLinks_Position add constraint FK_ContactLinks_Position_to_Position foreign key (positions_id) references Position;
alter table ContactLinks_Position add constraint FK_ContactLinks_Position_to_ContactLinks foreign key (ContactLinksEntity_item_id, ContactLinksEntity_versionCtrl_id) references ContactLinks;
alter table OrgUnit_OrgUnitLinks add constraint FK_OrgUnit_OrgUnitLinks_to_OrgUnitLinks foreign key (dataVersions_item_id, dataVersions_versionCtrl_id) references OrgUnitLinks;
alter table OrgUnit_OrgUnitLinks add constraint FK_OrgUnit_OrgUnitLinks_to_OrgUnit foreign key (OrgUnitEntity_id) references OrgUnit;
alter table OrgUnitLinks add constraint FK_OrgUnitLinks_to_OrgUnit foreign key (item_id) references OrgUnit;
alter table OrgUnitLinks add constraint FK_OrgUnitLinks_to_OrgUnit2 foreign key (parentItem_id) references OrgUnit;
alter table OrgUnitLinks add constraint FK_OrgUnitLinks_to_Position foreign key (managerPosition_id) references Position;
alter table OrgUnitLinks add constraint FK_OrgUnitLinks_to_VersionCtrl foreign key (versionCtrl_id) references VersionCtrl;
alter table OrgUnitLinks_OrgUnit add constraint FK_OrgUnitLinks_OrgUnit_to_OrgUnit foreign key (childrenItems_id) references OrgUnit;
alter table OrgUnitLinks_OrgUnit add constraint FK_OrgUnitLinks_OrgUnit_to_OrgUnitLinks foreign key (OrgUnitLinksEntity_item_id, OrgUnitLinksEntity_versionCtrl_id) references OrgUnitLinks;
alter table OrgUnitLinks_Position add constraint FK_OrgUnitLinks_Position_to_Position foreign key (positions_id) references Position;
alter table OrgUnitLinks_Position add constraint FK_OrgUnitLinks_Position_to_OrgUnitLinks foreign key (OrgUnitLinksEntity_item_id, OrgUnitLinksEntity_versionCtrl_id) references OrgUnitLinks;
alter table Position_PositionLinks add constraint FK_Position_PositionLinks_to_PositionLinks foreign key (dataVersions_item_id, dataVersions_versionCtrl_id) references PositionLinks;
alter table Position_PositionLinks add constraint FK_Position_PositionLinks_to_Position foreign key (PositionEntity_id) references Position;
alter table PositionLinks add constraint FK_PositionLinks_to_Position foreign key (item_id) references Position;
alter table PositionLinks add constraint FK_PositionLinks_to_Position2 foreign key (parentItem_id) references Position;
alter table PositionLinks add constraint FK_PositionLinks_to_OrgUnit foreign key (orgUnit_id) references OrgUnit;
alter table PositionLinks add constraint FK_PositionLinks_to_VersionCtrl foreign key (versionCtrl_id) references VersionCtrl;
alter table PositionLinks_Contact add constraint FK_PositionLinks_Contact_to_Contact foreign key (contacts_id) references Contact;
alter table PositionLinks_Contact add constraint FK_PositionLinks_Contact_to_PositionLinks foreign key (PositionLinksEntity_item_id, PositionLinksEntity_versionCtrl_id) references PositionLinks;
alter table PositionLinks_OrgUnit add constraint FK_PositionLinks_OrgUnit_to_OrgUnit foreign key (manageOrgUnits_id) references OrgUnit;
alter table PositionLinks_OrgUnit add constraint FK_PositionLinks_OrgUnit_to_PositionLinks foreign key (PositionLinksEntity_item_id, PositionLinksEntity_versionCtrl_id) references PositionLinks;
alter table PositionLinks_Position add constraint FK_PositionLinks_Position_to_Position foreign key (childrenItems_id) references Position;
alter table PositionLinks_Position add constraint FK_PositionLinks_Position_to_PositionLinks foreign key (PositionLinksEntity_item_id, PositionLinksEntity_versionCtrl_id) references PositionLinks;

/** System Control Constraints */
alter table SystemCtrl add constraint FK_SystemCtrl_to_VersionCtrl foreign key (versionCtrl_id) references VersionCtrl;
/** Limit to one system control record */
alter table SystemCtrl add constraint CHECK_SystemCtrl_ID check(id = 1);
