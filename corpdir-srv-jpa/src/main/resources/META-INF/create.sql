
/** POSITION TYPE */
create table PositionType (
id bigint generated by default as identity,
active boolean not null,
businessKey varchar(255),
custom boolean not null,
description varchar(255),
version timestamp,
typeLevel integer not null,
primary key (id)
);

/** POSITION */
create table Position (
id bigint generated by default as identity,
active boolean not null,
businessKey varchar(255),
custom boolean not null,
description varchar(255),
version timestamp,
parentId bigint,
orgUnit_id bigint,
type_id bigint,
primary key (id)
);
alter table Position add constraint FK_Position_to_Position foreign key (parentId) references Position;
alter table Position add constraint FK_Position_to_PositionType foreign key (type_id) references PositionType;

/**
* ORG UNIT DETAILS
*/

/** UNIT-TYPE */
create table UnitType (
id bigint generated by default as identity,
active boolean not null,
businessKey varchar(255),
custom boolean not null,
description varchar(255),
version timestamp,
primary key (id)
);

/** ORG UNIT */
create table OrgUnit (
id bigint generated by default as identity,
active boolean not null,
businessKey varchar(255),
custom boolean not null,
description varchar(255),
version timestamp,
parentId bigint,
managerPosition_id bigint,
type_id bigint,
primary key (id)
);
alter table OrgUnit add constraint FK_OrgUnit_to_Type foreign key (type_id) references UnitType;
alter table OrgUnit add constraint FK_OrgUnit_to_OrgUnit foreign key (parentId) references OrgUnit;
alter table OrgUnit add constraint FK_OrgUnit_to_MangerPosition foreign key (managerPosition_id) references Position;

alter table Position add constraint FK_Position_to_OrgUnit foreign key (orgUnit_id) references OrgUnit;

/** The Positions Mangaged by an ORG UNIT */
create table OrgUnit_Position (
OrgUnitEntity_id bigint not null,
positions_id bigint not null,
primary key (OrgUnitEntity_id, positions_id)
);
alter table OrgUnit_Position add constraint UK_OrgUnit_Position unique (positions_id);
alter table OrgUnit_Position add constraint FK_OrgUnit_Position_to_Position foreign key (positions_id) references Position;
alter table OrgUnit_Position add constraint FK_OrgUnit_Position_to_OrgUnit foreign key (OrgUnitEntity_id) references OrgUnit;

/** The ORG UNITS Manged by a Position */
create table Position_OrgUnit (
PositionEntity_id bigint not null,
manageOrgUnits_id bigint not null,
primary key (PositionEntity_id, manageOrgUnits_id)
);
alter table Position_OrgUnit add constraint UK_Position_OrgUnit unique (manageOrgUnits_id);
alter table Position_OrgUnit add constraint FK_Position_OrgUnit_to_OrgUnit foreign key (manageOrgUnits_id) references OrgUnit;
alter table Position_OrgUnit add constraint FK_Position_OrgUnit_to_Position foreign key (PositionEntity_id) references Position;

/** LOCATIONs */
create table Location (
id bigint generated by default as identity,
active boolean not null,
businessKey varchar(255),
custom boolean not null,
description varchar(255),
version timestamp,
country varchar(255),
line1 varchar(255),
line2 varchar(255),
postcode varchar(255),
state varchar(255),
suburb varchar(255),
workStation varchar(255),
parentId bigint,
primary key (id)
);
alter table Location add constraint FK_Location_to_Location foreign key (parentId) references Location;

/** IMAGE HOLDER */
create table Image (
id bigint generated by default as identity,
active boolean not null,
businessKey varchar(255),
custom boolean not null,
description varchar(255),
version timestamp,
image varchar(255) for bit data,
mimeType varchar(255),
thumbNail varchar(255) for bit data,
primary key (id)
);

/** CHANNEL (ie email, mobile etc) */
create table Channel (
id bigint generated by default as identity,
active boolean not null,
businessKey varchar(255),
custom boolean not null,
description varchar(255),
version timestamp,
channelValue varchar(255),
type varchar(255),
primary key (id)
);

/** CONTACT (ie the Person) */
create table Contact (
id bigint generated by default as identity,
active boolean not null,
businessKey varchar(255),
custom boolean not null,
description varchar(255),
version timestamp,
country varchar(255),
line1 varchar(255),
line2 varchar(255),
postcode varchar(255),
state varchar(255),
suburb varchar(255),
workStation varchar(255),
companyTitle varchar(255),
firstName varchar(255),
lastName varchar(255),
image_id bigint,
location_id bigint,
primary key (id)
);
alter table Contact add constraint FK_Contact_to_Location foreign key (location_id) references Location;
alter table Contact add constraint FK_Contact_to_Image foreign key (image_id) references Image;

/** Contacts can have multiple channels */
create table Contact_Channel (
ContactEntity_id bigint not null,
channels_id bigint not null,
primary key (ContactEntity_id, channels_id)
);
alter table Contact_Channel add constraint UK_Contact_Channel unique (channels_id);
alter table Contact_Channel add constraint FK_Contact_Channel_to_Channel foreign key (channels_id) references Channel;
alter table Contact_Channel add constraint FK_Contact_Channel_to_Contact foreign key (ContactEntity_id) references Contact;

/** Contacts can manage multiple positions */
create table Contact_Position (
ContactEntity_id bigint not null,
positions_id bigint not null,
primary key (ContactEntity_id, positions_id)
);
alter table Contact_Position add constraint FK_Contact_Position_to_Contact foreign key (ContactEntity_id) references Contact;
alter table Contact_Position add constraint FK_Contact_Position_to_Position foreign key (positions_id) references Position;

/** Position can be managed by mulitple contacts */
create table Position_Contact (
PositionEntity_id bigint not null,
contacts_id bigint not null,
primary key (PositionEntity_id, contacts_id)
);
alter table Position_Contact add constraint FK_Position_Contact_to_Contact foreign key (contacts_id) references Contact;
alter table Position_Contact add constraint FK_Position_Contact_to_Position foreign key (PositionEntity_id) references Position;
